{"version":3,"sources":["../../src/models/protein.js"],"names":["proteinSchema","Schema","id","type","String","required","genome","ObjectId","ref","sequence","legth","Number","desc","preferred_name","funcional_COG","GOs","KEGG_ko","KEGG_pathway","tax_scope","best_blast","timestamps","Protein"],"mappings":";;;;;;;AAAA;;AAEA,IAAMA,aAAa,GAAG,IAAIC,gBAAJ,CAAW;AAE7BC,EAAAA,EAAE,EAAE;AACAC,IAAAA,IAAI,EAAEC,MADN;AAEAC,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,wBAAP;AAFV,GAFyB;AAM7BC,EAAAA,MAAM,EAAE;AACJH,IAAAA,IAAI,EAAEF,iBAAOM,QADT;AAEJC,IAAAA,GAAG,EAAE,QAFD;AAGJH,IAAAA,QAAQ,EAAE;AAHN,GANqB;AAW7BI,EAAAA,QAAQ,EAAE;AACNN,IAAAA,IAAI,EAAEC,MADA;AAENC,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,wBAAP;AAFJ,GAXmB;AAe7BK,EAAAA,KAAK,EAAE;AACHP,IAAAA,IAAI,EAAEQ;AADH,GAfsB;AAkB7BC,EAAAA,IAAI,EAAE;AACFT,IAAAA,IAAI,EAAEC;AADJ,GAlBuB;AAqB7BS,EAAAA,cAAc,EAAC;AACXV,IAAAA,IAAI,EAAEC;AADK,GArBc;AAwB7BU,EAAAA,aAAa,EAAC;AACVX,IAAAA,IAAI,EAAEC;AADI,GAxBe;AA2B7BW,EAAAA,GAAG,EAAC;AACAZ,IAAAA,IAAI,EAAEC;AADN,GA3ByB;AA8B7BY,EAAAA,OAAO,EAAC;AACJb,IAAAA,IAAI,EAAEC;AADF,GA9BqB;AAiC7Ba,EAAAA,YAAY,EAAC;AACTd,IAAAA,IAAI,EAAEC;AADG,GAjCgB;AAoC7Bc,EAAAA,SAAS,EAAC;AACNf,IAAAA,IAAI,EAAEC;AADA,GApCmB;AAuC7Be,EAAAA,UAAU,EAAC;AACPhB,IAAAA,IAAI,EAAEC;AADC;AAvCkB,CAAX,EA2CpB;AACEgB,EAAAA,UAAU,EAAE;AADd,CA3CoB,CAAtB,C,CA8CA;;AACA,IAAMC,OAAO,GAAG,qBAAM,SAAN,EAAgBrB,aAAhB,CAAhB;eAEeqB,O","sourcesContent":["import {Schema , model} from 'mongoose';\n\nconst proteinSchema = new Schema({\n\n    id: {\n        type: String, \n        required: [true, \"El titulo es necesario\"]\n    },\n    genome: {\n        type: Schema.ObjectId, \n        ref: 'Genoma',\n        required: true\n    },\n    sequence: {\n        type: String, \n        required: [true, \"El titulo es necesario\"]\n    },\n    legth: {\n        type: Number\n    },\n    desc: {\n        type: String\n    },\n    preferred_name:{\n        type: String\n    },\n    funcional_COG:{\n        type: String\n    },\n    GOs:{\n        type: String\n    },\n    KEGG_ko:{\n        type: String\n    },\n    KEGG_pathway:{\n        type: String\n    },\n    tax_scope:{\n        type: String\n    },\n    best_blast:{\n        type: String\n    }\n\n},{\n    timestamps: true\n});\n//proteinaSchema.index({desc: 'text', preferred_name: 'text', GOs: 'text', KEGG_pathway: 'text', KEGG_ko: 'text'});\nconst Protein = model('Protein',proteinSchema);\n\nexport default Protein;"],"file":"protein.js"}